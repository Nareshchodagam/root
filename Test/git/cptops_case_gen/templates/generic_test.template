- Copy remote scripts to the target hosts
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"


- Set the boot device to HDD
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/manage_bootdevice.py -s -d HDD" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Disable nagios monitoring
Exec_with_creds: /opt/cpt/bin/nagios_monitor.py -H v_HOSTS -c disable

- Verify server status
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product sfdc-base,sfdc-splunk-forwarder -host v_HOSTS -c server_status -auto2

- Test the  update script:
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/system_update.sh -a v_BUNDLE -p" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Check redhat version
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "uname -a && cat /etc/redhat-release" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Wait for the hosts to boot up
Exec: ~/check_reconnect.py -H v_HOSTS

- Validate patching
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_patchset.py --bundle v_BUNDLE" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Check app status
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product  sfdc-base,sfdc-splunk-forwarder  -device_role v_ROLE -host v_HOSTS -c server_status -auto2

- add to pool
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product sfdc-base -device_role v_ROLE -host v_HOSTS -c pingcheck -auto2

-test enable monitoring on appropriate monitor host
Exec_with_creds: /opt/cpt/bin/nagios_monitor.py -H v_HOSTS -c enable
