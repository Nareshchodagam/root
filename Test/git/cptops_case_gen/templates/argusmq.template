RR based commands

-Copy remote scripts to the target hosts
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Delete cptrelease file
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "rm -rf /etc/cptrelease" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Write patching data in GUS
Exec_with_creds: /opt/cpt/update_lh.py -l --case v_CASE --host v_HOSTS

- Check for RPMDB and YUM Lock
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/rpmdb_check.sh" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Set the boot device to HDD
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/manage_bootdevice.py -s -d HDD" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Disable GOC++ alerts ("enable" alert suppression)
Exec_with_creds: /opt/cpt/cptops_logicalhost_alerts.py -a enable -H v_HOSTS

- Stop the running application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product argus_mq -host v_HOSTS -c  sudo_cmd -m "/home/sfdc/start-stop.sh stop" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

v_INCLUDE

- Remove /var/lib/net-snmp/snmpd.conf
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "rm /var/lib/net-snmp/snmpd.conf" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Reboot the host
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "reboot" -property "ssh_timeout=15" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Wait for the hosts to boot up
Exec_with_creds: /opt/cpt/bin/check_reconnect.py -H v_HOSTS

-Validate that the hosts have been patched and are running the correct version
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_patchset.py --bundle v_BUNDLE" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Start the application
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product argus_mq -host v_HOSTS -c  cmd -m "grep -qi DAEMON_ENABLED=\\\"true\\\" /home/sfdc/argus.rc; if [ \$? -eq 0 ]; then sleep 180 ; else /home/sfdc/start-stop.sh start && sleep 180;fi" -threads -auto2

- Wait for the app to start
Exec: sleep 120

- Verify app
release_runner.pl -forced_host v_HOSTS -c  sudo_cmd -m "runuser -l sfdc -c '/home/sfdc/check-argus-services.py'" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Enable GOC++ alerts ("disable" alert suppression)
Exec_with_creds: /opt/cpt/cptops_logicalhost_alerts.py -a disable -H v_HOSTS

- Update Patching data in GUS
Exec_with_creds: /opt/cpt/update_lh.py --case v_CASE --host v_HOSTS --etime

Exec: echo "Host v_HOSTS system patching completed"

- Auto pause case if case status is not equal to In Progres.
Exec_with_creds: /opt/cpt/gus_case_mngr.py -c v_CASE --pause -y
