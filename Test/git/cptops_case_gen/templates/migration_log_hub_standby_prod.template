- Verify cluster state being standby
Exec: for host in $(cat ~/v_CASE_include| tr "," " ");do inventory-action.pl -use_krb_auth -action read  -resource host -name $host |grep -i standby;done

- Copy remote scripts to the target hosts
release_runner.pl -forced_host v_HOSTS -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- get version numbers for apps
release_runner.pl -invdb_mode -superpod v_SUPERPOD -cluster v_CLUSTER -product mandm-hub -c versioncheck -dostandby -threads -auto2 -host $(cat ~/v_CASE_include ) > ~/v_CLUSTER-v_ROLE-v_CASE_version_output.txt

- Extract app versions from output data.
Exec: /opt/cpt/bin/get_versions.py -f ~/v_CLUSTER-v_ROLE-v_CASE_version_output.txt -o ~/v_CLUSTER-v_ROLE-v_CASE_manifests.txt --versions

- Disable GOC++ alerts
Exec_with_creds: /opt/cpt/cptops_logicalhost_alerts.py -a enable -H v_HOSTS

- Copy  the Cert
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "cp -r /etc/pki_service/traffic/client /etc/pki_service/mgmthub" -auto2 -threads -property "sudo_cmd_line_trunk_fix=1" -comment 'BLOCK 1'

- Change permission of the cert
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "chmod -R 775 /etc/pki_service/mgmthub/client" -auto2 -threads -property "sudo_cmd_line_trunk_fix=1" -comment 'BLOCK 1'

- Refresh the cert
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "/usr/local/libexec/copy_pki_to_hubs.sh" -auto2 -threads -property "sudo_cmd_line_trunk_fix=1" -comment 'BLOCK 1'

- Stop app
release_runner.pl -invdb_mode -host v_HOSTS  -cluster v_CLUSTER -superpod v_SUPERPOD -product mandm-hub -c stop_server -threads -auto2  -property "sudo_cmd_line_trunk_fix=1"

- Set the iDB status of the hosts to IN_MAINTENANCE
Exec: for host in $(cat ~/v_CASE_include| tr "," " ");do inventory-action.pl -use_krb_auth -action update  -resource host -name $host -updateFields "operationalStatus=IN_MAINTENANCE";done>> ~/v_CASE_idb_log.txt

- Begin Migration block
Exec: for host in $(cat ~/v_CASE_include| tr "," " ");do serial=$(inventory-action.pl -use_krb_auth -action read  -resource host -name $host -fields serialNumber -q |grep -i serialNumber|cut -d'"' -f4);clname=$(inventory-action.pl -use_krb_auth -action read  -resource host -name $host -fields cluster.name -q | grep name |cut -d'"' -f4);echo "/usr/lib/gigantor/bin/caspr_host_reimage.sh -c  $clname  -d v_ROLE  -h $host -i admin  -o CentOS -v 7 -n $serial -s v_SUPERPOD -m ops-monitor-v_DATACENTER.ops.sfdc.net"; done >> ~/v_CASE_commands_BLOCKv_NUM

Manual: Reimage through Caspr

- Refresh kerberos ticket
Exec_with_creds: /usr/local/bin/ambari-manage/interactive-kinit.py

Exec: for host in $(cat ~/v_CASE_include| tr "," " ");do inventory-action.pl -use_krb_auth -action update  -resource host -name $host -updateFields "operationalStatus=ACTIVE";done>> ~/v_CASE_idb_log.txt

- END Migration block

- Removing known hosts file
Exec: rm -rf  ~/.ssh/known_hosts

- Validate that the hosts have been migrated to CE7
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "uname -r |grep el7" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- NTP stop & start
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "systemctl stop ntpd"  -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "systemctl start ntpdate && sleep 5" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "hwclock --systohc" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "systemctl start ntpd" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Deploy apps
release_runner.pl -invdb_mode -dc v_DATACENTER -superpod v_SUPERPOD -cluster v_CLUSTER -host v_HOSTS -dostandby -c deploy -threads  -no_db_data_init  -auto2 -versions `cat ~/v_CLUSTER-v_ROLE-v_CASE_manifests.txt` -nostart 

- Start app
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "/usr/local/libexec/hubservice.sh" -threads -auto2 -threads -property "sudo_cmd_line_trunk_fix=1"

- Update Patching data in GUS
Exec_with_creds: /opt/cpt/update_lh.py --case v_CASE --host v_HOSTS --etime

- Enable GOC++ alerts
Exec_with_creds: /opt/cpt/cptops_logicalhost_alerts.py -a disable -H v_HOSTS

Exec: echo "Host v_HOSTS system patching completed"

Manual: CPT work ends , handover the case to funnel team for failover from primary to standby. Agent team will restart ULI Agent on all App Hosts to pick up the new primary

- Auto pause case if case status is not equal to In Progres.
Exec_with_creds: /opt/cpt/gus_case_mngr.py -c v_CASE --pause -y
