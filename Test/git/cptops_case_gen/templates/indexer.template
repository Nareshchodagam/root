- connect to console
Manual: console v_HOSTS

- Run kinit to activate kerberos for some of the locally run commands
Exec: kinit

- Before starting check out everything is ok across the cluster
Exec: ~/indexer_validate.py -H v_HOSTLIST

- Validate which is the reader/writer/prod/dr - host should not be writer and should be one writer.
- Validate no samqfs errors
Exec: ~/indexer_validate.py -H v_HOSTS -p -s

- Validate no hardware errors
Exec: ~/genSummary.py -H v_HOSTS -c zpool_status

- set env
release_runner.pl -forced_host "v_HOSTS" -force_update_bootstrap -c sudo_cmd -m "ls" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Disable nagios monitoring
Exec_with_creds: /opt/cpt/bin/nagios_monitor.py -H v_HOSTS -c disable

- Stop the running application
release_runner.pl -invdb_mode -superpod $SUPERPOD -cluster $INSTANCE -auto2 -product sfdc-base -c stop_server -stopall -host v_HOSTS

- Stop Splunk
release_runner.pl -invdb_mode -superpod $SUPERPOD -cluster $INSTANCE -auto2 -product sfdc-splunk-forwarder -c stop_server -host v_HOSTS

- pre-emptive reboot before we make a change
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "/usr/sbin/reboot" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Wait for the hosts to boot up
Exec: ~/check_reconnect.py -H v_HOSTS

- run the patch presuming host comes up clean
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/system_update.sh -a v_BUNDLE -p" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- check host updated successfully
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_patchset.py -u" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- With the host updated reboot
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "/usr/sbin/reboot" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Wait for the hosts to boot up
Exec: ~/check_reconnect.py -H v_HOSTS

- check host updated successfully
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_patchset.py -k 150400-20" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Check if /home mounted as part of the rpool
release_runner.pl -forced_host v_HOSTS -c cmd -m "df -h /home | grep rpool/home" -threads -auto2

- IF /home not mounting properly

- To mount /home correctly after reboot/patch do the following
- release_runner.pl -forced_host v_HOSTS -c cmd -m "/usr/sbin/zfs list | grep ' /home'" -threads -auto2


- /home will should have a line like
- rpool/home [ SNIP ] /home

- mount this on top of the current /home which has nothing there
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "/usr/sbin/zfs mount -O rpool/home" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- Check if /home mounted as part of the rpool
release_runner.pl -forced_host v_HOSTS -c cmd -m "df -h /home" -threads -auto2

- check host updated successfully
release_runner.pl -forced_host v_HOSTS -c sudo_cmd -m "./remote_transfer/validate_patchset.py -k 150400-20" -threads -auto2 -property "sudo_cmd_line_trunk_fix=1"

- validate the /search file system is mounted, that we are still a reader and no samqfs messages in syslog
Exec: ~/indexer_validate.py -H v_HOSTS -p -m -s

- Start the application
release_runner.pl -invdb_mode -superpod $SUPERPOD -cluster $INSTANCE -auto2 -product sfdc-base -c start_server -stopall -host v_HOSTS

- Start Splunk
release_runner.pl -invdb_mode -superpod $SUPERPOD -cluster $INSTANCE -auto2 -product sfdc-splunk-forwarder -c start_server -host v_HOSTS

- Enable nagios monitoring
Exec_with_creds: /opt/cpt/bin/nagios_monitor.py -H v_HOSTS -c enable

- Patchset completed comment
Exec: echo "host v_HOSTS solaris patching completed"
